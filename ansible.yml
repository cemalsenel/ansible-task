---
- name: configure node
  hosts: _ansible_node
  become: true

  tasks:
    - name: update packages
      yum: 
        name: "*"
        state: latest
    
    - name: Uninstall old versions
      yum:
        name: "{{ item }}"
        state: removed
      loop:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine

    - name: install yum-utils
      yum:
        name: yum-utils
        state: latest

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      package:
        name: docker-ce
        state: latest

    - name: Install pip
      package: 
        name: python3-pip
        state: present
        
    - name: Install docker sdk and docker-compose
      pip:
        name: 
          - docker
          - docker-compose


    - name: add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: start docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    # - name: Download and install Docker Compose
    #   get_url:
    #     url: https://github.com/docker/compose/releases/download/v2.6.0/docker-compose-linux-x86_64
    #     dest: /usr/bin/docker-compose
    #     mode: 0755
    #   when:
    #     - docker_compose_check.msg is defined
    #     - docker_compose_check.msg.find('No such file or directory') != -1

    - name: copy source files of app
      copy:
        src: app/
        dest: tmp/

    - name: run docker-compose
      community.docker.docker_compose:
        project_src: tmp/
        state: present
        env_file: ~/tmp/app/.env
    



    # - name: Allow everything and enable UFW
    #   community.general.ufw:
    #     state: enabled
    #     policy: allow
        
    # - name: Allow all access to tcp port 3000
    #   community.general.ufw:
    #     rule: allow
    #     port: '{{ item }}'
    #     proto: tcp
    #   loop:
    #     - 3000






